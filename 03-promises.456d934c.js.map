{"mappings":"AAAA,MAAMA,EAAOC,SAASC,cAAc,SAC9BC,EAAaF,SAASC,cAAc,kBACpCE,EAAOH,SAASC,cAAc,iBAC9BG,EAASJ,SAASC,cAAc,mBAChCI,EAASL,SAASM,iBAAiB,mBACnCC,EAAYP,SAASC,cAAc,eA+CzCF,EAAKS,iBAAiB,UAjCtB,SAAwBC,GACtBA,EAAMC,iBAENH,EAAUI,SAAW,OACrBN,EAAOO,SAAQC,IACbA,EAAMF,SAAW,MAAM,IAGzB,IAAIG,EAAW,EACXC,EAAU,KAEdC,YAAW,KACTD,EAAUE,aAAY,KACpB,MAAMC,EACJC,SAASjB,EAAWkB,OAASD,SAAShB,EAAKiB,MAAQN,IA1B3D,SAAuBA,EAAUI,GAC/B,MAAMG,EAAgBC,KAAKC,SAAW,GAQtC,OAPgB,IAAIC,SAAQ,CAACC,EAASC,KAChCL,EACFI,EAAQ,uBAAqBX,EAAY,QAASI,OAEhDQ,EAAK,sBAAoBZ,EAAU,QAASI,MAAU,G,EAsBxDS,CAAcb,EAAUI,GACrBU,MAAKC,GAAYC,QAAQC,IAAIF,KAC7BG,OAAMC,GAAYH,QAAQC,IAAIE,KAE7BnB,GAAYV,EAAOgB,MAAQ,IAC7Bc,cAAcnB,GACdV,EAAOO,SAAQC,IACbA,EAAMO,MAAQ,GACdP,EAAMsB,gBAAgB,WAAW,IAEnC5B,EAAU4B,gBAAgB,aAE5BrB,GAAU,GACTX,EAAKiB,MAAM,GACblB,EAAWkB,M","sources":["src/js/03-promises.js"],"sourcesContent":["const form = document.querySelector('.form');\nconst firstDelay = document.querySelector('[name=\"delay\"]');\nconst step = document.querySelector('[name=\"step\"]');\nconst amount = document.querySelector('[name=\"amount\"]');\nconst inputs = document.querySelectorAll('[type=\"number\"]');\nconst submitBtn = document.querySelector('form button');\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  const promise = new Promise((resolve, reject) => {\n    if (shouldResolve) {\n      resolve(`✅ Fulfilled promise ${position + 1} in ${delay}ms`);\n    } else {\n      reject(`❌ Rejected promise ${position + 1} in ${delay}ms`);\n    }\n  });\n  return promise;\n}\n\nfunction promiseCreator(event) {\n  event.preventDefault();\n\n  submitBtn.disabled = 'true';\n  inputs.forEach(input => {\n    input.disabled = 'true';\n  });\n\n  let position = 0;\n  let timerId = null;\n\n  setTimeout(() => {\n    timerId = setInterval(() => {\n      const delay =\n        parseInt(firstDelay.value) + parseInt(step.value * position);\n\n      createPromise(position, delay)\n        .then(resolved => console.log(resolved))\n        .catch(rejected => console.log(rejected));\n\n      if (position >= amount.value - 1) {\n        clearInterval(timerId);\n        inputs.forEach(input => {\n          input.value = '';\n          input.toggleAttribute('disabled');\n        });\n        submitBtn.toggleAttribute('disabled');\n      }\n      position++;\n    }, step.value);\n  }, firstDelay.value);\n}\n\nform.addEventListener('submit', promiseCreator);\n"],"names":["$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$firstDelay","$47d4ff9957288465$var$step","$47d4ff9957288465$var$amount","$47d4ff9957288465$var$inputs","querySelectorAll","$47d4ff9957288465$var$submitBtn","addEventListener","event","preventDefault","disabled","forEach","input","position","timerId","setTimeout","setInterval","delay","parseInt","value","shouldResolve","Math","random","Promise","resolve","reject","$47d4ff9957288465$var$createPromise","then","resolved","console","log","catch","rejected","clearInterval","toggleAttribute"],"version":3,"file":"03-promises.456d934c.js.map"}